do ./"versioncontrol.art"

packages: # "packages/list.art"
do relative "getrepodetails.art"

do ::
    cnt: 1
    total: size packages

    hasError?: false
    problemWithRepo: new []
    problemWithReleases: new []

    separator: repeat "=" 80

    print separator
    print " Verifying packages"
    print separator

    loop packages [name, pkg][
        prints [pad to :string cnt 4 "/" pad.right to :string total 4 "|"]
        prints color #cyan "Processing: "

        pkgType: "gh"
        if is? :codebergLink pkg -> pkgType: "cb"
        prints color #magenta pad.right pkgType 3
        
        prints pad.right name 38
 
        (repoD: <= getRepoInfo pkg)?[
            (empty? getVersions pkg)?[
                print color #orange "[ ❓ HMMM  ]" 
                'problemWithReleases ++ pkg\location
                hasError?: true
            ] -> print color #green "[ ✅  OK   ]"                  
        ][
            print color #red "[ ⛔️ ERROR ]"
            'problemWithRepo ++ pkg\location
            hasError?: true
        ]
        cnt: cnt + 1
    ]

    (hasError?)? [
        unless empty? problemWithRepo [
            print ""
            print "Couldn't retrieve repo info for:"
            print.lines problemWithRepo
        ]
        unless empty? problemWithReleases [
            print ""
            print "Couldn't find valid release packages for:"
            print.lines problemWithReleases
        ]
        print separator
        print ""
        panic.code:1 "Something went wrong.\nLet's fix everything before merging!"
    ][
        print separator
        print ""
        print [">" color #green "Everything went fine! 🔥🔥🔥"]
        exit
    ]